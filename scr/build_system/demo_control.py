#!/usr/bin/env python3
"""
Demonstra√ß√£o do Sistema de Controle de Processamento
===================================================
Mostra como funciona o controle rigoroso de artigos processados.

Autor: Sistema Build
Data: Setembro 2025
"""

import sys
from pathlib import Path

# Adiciona o diret√≥rio build_system ao path
sys.path.insert(0, str(Path(__file__).parent))

from utils.processed_articles_manager import ProcessedArticlesManager

def demo_control_system():
    """Demonstra o sistema de controle."""
    print("=" * 70)
    print("üîê SISTEMA DE CONTROLE RIGOROSO - DEMONSTRA√á√ÉO")
    print("=" * 70)
    
    manager = ProcessedArticlesManager()
    
    print("\nüìã COMO FUNCIONA O CONTROLE:")
    print("   1. Arquivo 'processed_articles.txt' cont√©m lista de artigos processados")
    print("   2. Apenas artigos DOCX N√ÉO listados s√£o processados")
    print("   3. Evita reprocessamento desnecess√°rio e conflitos")
    print("   4. Sistema atualiza lista automaticamente ap√≥s processamento")
    
    print("\nüìä STATUS ATUAL:")
    processed = manager.load_processed_list()
    unprocessed = manager.get_unprocessed_docx()
    
    print(f"   ‚úÖ Artigos j√° processados: {len(processed)}")
    print(f"   ‚è≥ Aguardando processamento: {len(unprocessed)}")
    
    if unprocessed:
        print(f"\nüìÇ Pr√≥ximos a processar:")
        for i, docx_file in enumerate(unprocessed[:5], 1):
            print(f"      {i}. {docx_file.name}")
        if len(unprocessed) > 5:
            print(f"      ... e mais {len(unprocessed) - 5}")
    else:
        print("\n   üéâ Todos os arquivos j√° foram processados!")
    
    print(f"\nüí° COMANDOS √öTEIS:")
    print("   # Ver status detalhado")
    print("   python -m utils.processed_articles_manager status")
    print("")
    print("   # Remover artigo para reprocessar")
    print("   python -m utils.processed_articles_manager remove nome_artigo")
    print("")
    print("   # Sincronizar com HTMLs existentes")
    print("   python -m utils.processed_articles_manager sync")
    print("")
    print("   # Listar todos os processados")
    print("   python -m utils.processed_articles_manager list")
    
    print(f"\nüîí PROTE√á√ÉO CONTRA SOBREPOSI√á√ÉO:")
    print("   ‚úÖ Evita reprocessar artigos j√° convertidos")
    print("   ‚úÖ Mant√©m controle rigoroso de estado")
    print("   ‚úÖ Permite reprocessamento seletivo se necess√°rio")
    print("   ‚úÖ Sincroniza√ß√£o autom√°tica com arquivos HTML")
    
def demo_remove_and_readd():
    """Demonstra remo√ß√£o e re-adi√ß√£o de artigo."""
    print("\n" + "=" * 70)
    print("üîÑ DEMONSTRA√á√ÉO: REPROCESSAMENTO DE ARTIGO")
    print("=" * 70)
    
    manager = ProcessedArticlesManager()
    
    # Pega um artigo processado para demonstrar
    processed = manager.load_processed_list()
    if not processed:
        print("‚ùå Nenhum artigo processado encontrado para demonstrar")
        return
    
    sample_article = sorted(processed)[0]  # Primeiro da lista ordenada
    
    print(f"\nüìù Exemplo com artigo: {sample_article}")
    print(f"   Status atual: {'‚úÖ Processado' if manager.is_processed(sample_article) else '‚è≥ N√£o processado'}")
    
    print(f"\nüí≠ Para reprocessar este artigo:")
    print(f"   1. Remover da lista:")
    print(f"      python -m utils.processed_articles_manager remove {sample_article}")
    print(f"   ")
    print(f"   2. Executar build (apenas artigos novos):")
    print(f"      python build.py --new-only")
    print(f"   ")
    print(f"   3. Artigo ser√° reprocessado e readicionado √† lista automaticamente")
    
    print(f"\n‚ö†Ô∏è IMPORTANTE:")
    print("   ‚Ä¢ Sistema n√£o reprocessa artigos j√° na lista")
    print("   ‚Ä¢ Para for√ßar reprocessamento, remova da lista primeiro")
    print("   ‚Ä¢ Build --new-only √© mais eficiente que build completo")
    print("   ‚Ä¢ Lista √© atualizada automaticamente ap√≥s processamento")

def main():
    """Executa demonstra√ß√£o completa."""
    demo_control_system()
    demo_remove_and_readd()
    
    print("\n" + "=" * 70)
    print("‚ú® SISTEMA DE CONTROLE FUNCIONANDO PERFEITAMENTE!")
    print("=" * 70)
    print("\nüéØ Benef√≠cios Alcan√ßados:")
    print("   ‚úÖ Controle rigoroso de processamento")
    print("   ‚úÖ Evita sobreposi√ß√£o de arquivos")
    print("   ‚úÖ Build incremental eficiente")
    print("   ‚úÖ Reprocessamento seletivo poss√≠vel")
    print("   ‚úÖ Sincroniza√ß√£o autom√°tica")

if __name__ == '__main__':
    main()
